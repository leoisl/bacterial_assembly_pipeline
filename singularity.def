Bootstrap: debootstrap
OSVersion: bionic
MirrorURL: http://us.archive.ubuntu.com/ubuntu/

%environment 
PATH=/bioinf-tools/prokka/bin:/bioinf-tools/quast-5.0.2:/bioinf-tools/shovill/bin:/bioinf-tools/velvet:/bioinf-tools/Trimmomatic-0.36:/bioinf-tools/FLASH-1.2.11:/bioinf-tools/Lighter-1.1.1:/bioinf-tools/SPAdes-3.12.0-Linux/bin:/bioinf-tools/pilon:/bioinf-tools/megahit_v1.1.3_LINUX_CPUONLY_x86_64-bin:/bioinf-tools/skesa:/bioinf-tools/seqtk-1.2:/bioinf-tools/mash-Linux64-v2.0:/bioinf-tools/bwa-0.7.17:/bioinf-tools/samtools-1.9/bin:/bioinf-tools:$PATH

%setup
    mkdir $SINGULARITY_ROOTFS/assemble_all_ena
    rsync -a ../python ../nextflow $SINGULARITY_ROOTFS/assemble_all_ena/

%post
    apt update
    apt install -y software-properties-common
    apt-add-repository universe
    apt update
    apt install -y git wget build-essential libncurses5-dev openjdk-8-jdk-headless python python-dev python3 python3-dev python3-pip libstdc++6 liblzma5 libbz2-1.0 zlib1g-dev pigz unzip liblzma-dev libbz2-dev python-matplotlib libpng-dev libfreetype6-dev pkg-config libdatetime-perl libxml-simple-perl libdigest-md5-perl git default-jre bioperl
    export LC_ALL=C.UTF-8
    export LANG=C.UTF-8
    echo 'export LC_ALL=C.UTF-8' >> $SINGULARITY_ENVIRONMENT
    echo 'export LANG=C.UTF-8' >> $SINGULARITY_ENVIRONMENT
    #echo "export PATH=/usr/local:/usr/local/bin:$PATH" >> $SINGULARITY_ENVIRONMENT

    mkdir /bioinf-tools
    cd /bioinf-tools
    HERE=$PWD
    WGET="wget --quiet"
    MAKE="make --silent -j"
    UNTAR="tar xf"
    
    SAMTOOLSVER=1.9
    SAMTOOLS=samtools-$SAMTOOLSVER
    echo "* $SAMTOOLS"
    #apt-get install -y libncurses5-dev libbz2-dev liblzma-dev zlib1g-dev
    $WGET https://github.com/samtools/samtools/releases/download/$SAMTOOLSVER/$SAMTOOLS.tar.bz2
    $UNTAR $SAMTOOLS.tar.bz2
    (cd $SAMTOOLS && ./configure --prefix=$HERE/$SAMTOOLS && $MAKE install)
    NEW_PATH=$HERE/$SAMTOOLS/bin
    
    $WGET https://raw.githubusercontent.com/tseemann/samclip/master/samclip
    chmod +x samclip
    mv samclip $HERE/$SAMTOOLS/bin
    
    BWAVER=0.7.17
    BWA=bwa-$BWAVER
    echo "* $BWA"
    $WGET https://github.com/lh3/bwa/releases/download/v$BWAVER/$BWA.tar.bz2
    $UNTAR $BWA.tar.bz2
    $MAKE -C $BWA 
    NEW_PATH=$HERE/$BWA:$NEW_PATH
    
    MASHVER=2.0
    MASH="mash-Linux64-v$MASHVER"
    MASHTAR="$MASH.tar"
    echo "* $MASH"
    $WGET https://github.com/marbl/Mash/releases/download/v$MASHVER/$MASHTAR
    $UNTAR $MASHTAR
    NEW_PATH=$HERE/$MASH:$NEW_PATH
    
    SEQTKVER=1.2
    SEQTK=v$SEQTKVER.tar.gz
    echo "* seqtk $SEQTK"
    $WGET https://github.com/lh3/seqtk/archive/$SEQTK
    $UNTAR $SEQTK
    $MAKE -C seqtk-$SEQTKVER
    chmod g-w seqtk-$SEQTKVER/seqtk
    NEW_PATH=$HERE/seqtk-$SEQTKVER:$NEW_PATH
    
    SKESA=skesa
    echo "* $SKESA"
    mkdir -p $SKESA
    $WGET -O $SKESA/skesa https://ftp.ncbi.nlm.nih.gov/pub/agarwala/skesa/skesa.centos6.9
    #$WGET -O $SKESA/skesa https://ftp.ncbi.nlm.nih.gov/pub/agarwala/skesa/skesa.centos7.4
    chmod +x $SKESA/skesa
    NEW_PATH=$HERE/$SKESA:$NEW_PATH
    
    MEGAHITVER=1.1.3
    MEGAHIT=megahit_v${MEGAHITVER}_LINUX_CPUONLY_x86_64-bin
    MEGAHITTAR=$MEGAHIT.tar.gz
    echo "* $MEGAHIT"
    $WGET https://github.com/voutcn/megahit/releases/download/v$MEGAHITVER/$MEGAHITTAR
    $UNTAR $MEGAHITTAR
    NEW_PATH=$HERE/$MEGAHIT:$NEW_PATH
    
    #KMC=KMC3.linux.tar.gz
    #echo "* $KMC"
    #$WGET https://github.com/refresh-bio/KMC/releases/download/v3.0.0/$KMC
    #tar xvf $KMC
    #rm -fv kmc_dump kmc_tools
    #NEW_PATH=$HERE:$NEW_PATH
    
    PILONVER=1.22
    JAR=pilon-$PILONVER.jar
    PILON=pilon
    PILONSH=$PILON/$PILON
    echo "* $JAR"
    $WGET https://github.com/broadinstitute/pilon/releases/download/v$PILONVER/$JAR
    mkdir -p $PILON
    echo "exec java -jar $PWD/$JAR" '"$@"' > $PILONSH
    chmod +x $PILONSH
    cat "$PILONSH"
    NEW_PATH=$HERE/$PILON:$NEW_PATH
    
    # http://cab.spbu.ru/files/release3.12.0/SPAdes-3.12.0-Linux.tar.gz
    SPADESVER=3.12.0
    SPADES=SPAdes-$SPADESVER-Linux
    echo "* $SPADES"
    $WGET http://cab.spbu.ru/files/release$SPADESVER/$SPADES.tar.gz
    $UNTAR $SPADES.tar.gz
    NEW_PATH=$HERE/$SPADES/bin:$NEW_PATH
    
    LIGHTER=v1.1.1.tar.gz
    echo "* $LIGHTER"
    $WGET https://github.com/mourisl/Lighter/archive/$LIGHTER
    $UNTAR $LIGHTER
    $MAKE -C Lighter-1.1.1 
    NEW_PATH=$HERE/Lighter-1.1.1:$NEW_PATH
    
    FLASH=FLASH-1.2.11
    echo "* $FLASH"
    $WGET https://downloads.sourceforge.net/project/flashpage/$FLASH.tar.gz
    $UNTAR $FLASH.tar.gz
    $MAKE -C $FLASH 
    NEW_PATH=$HERE/$FLASH:$NEW_PATH
    
    TRIMVER=0.36
    TRIM=Trimmomatic-$TRIMVER.zip
    TRIMDIR=Trimmomatic-$TRIMVER
    TRIMSH=$TRIMDIR/trimmomatic
    echo "* $TRIM"
    $WGET http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/$TRIM
    #apt-get install unzip
    unzip $TRIM
    echo "exec java -jar $PWD/Trimmomatic-$TRIMVER/trimmomatic-$TRIMVER.jar" '"$@"' > $TRIMSH
    chmod +x "$TRIMSH"
    cat "$TRIMSH"
    NEW_PATH=$HERE/$TRIMDIR:$NEW_PATH
    
    VELVET=velvet
    mkdir $VELVET
    wget -O $VELVET/velveth 'https://github.com/Victorian-Bioinformatics-Consortium/vague/blob/master/velvet-binaries/linux-x86_64/velveth?raw=true'
    wget -O $VELVET/velvetg 'https://github.com/Victorian-Bioinformatics-Consortium/vague/blob/master/velvet-binaries/linux-x86_64/velvetg?raw=true'
    chmod +x $VELVET/*
    NEW_PATH=$HERE/$VELVET:$NEW_PATH
    
    
    #_____________________ enaBrowserTools ____________________#
    wget https://github.com/enasequence/enaBrowserTools/archive/v1.4.1.tar.gz
    tar xf v1.4.1.tar.gz
    
    ###shovel###
    git clone https://github.com/tseemann/shovill.git
    cd shovill
    git checkout 3fe8e193a8c1f1bf9a1cfc1a79c86b1bda5969e1
    cd .. 
    NEW_PATH=$HERE/shovill/bin:$NEW_PATH   

    ###quast###
    QUAST=quast
    QUASTVER=5.0.2
    $WGET https://downloads.sourceforge.net/project/quast/quast-5.0.2.tar.gz
    $UNTAR $QUAST-$QUASTVER.tar.gz
    cd quast-5.0.2
    ./quast.py test_data/contigs_1.fasta test_data/contigs_2.fasta -r test_data/reference.fasta.gz -g test_data/genes.gff
    NEW_PATH=$PWD:$NEW_PATH
    cd ..

    ###prokka###
    git clone https://github.com/tseemann/prokka.git
    cpan Bio::Perl
    cd prokka
    git checkout d6adb2c79ceedfdfa621eaec19ce25e656e51c5a
    bin/prokka --setupdb
    cd ..
    NEW_PATH=$HERE/prokka/bin:$NEW_PATH 
   
    ###pyfastaq#
    pip3 install pyfastaq

    #______________________ nextflow ____________________#
    cd /bioinf-tools
    wget -qO- get.nextflow.io | bash
    chmod 755 nextflow
    export PATH=$PWD:$PATH

    #______________________ python code _________________#
    cd /assemble_all_ena/python
    python3 setup.py test
    python3 setup.py install
    
    # cover anything else
    NEW_PATH=$NEW_PATH:$HERE
    
    echo "Deleting source files"
    rm -vf "$HERE/*.tar.*"
    rm -vf "$HERE/*/*.{c,h,cpp,hpp,o}"
    
    echo $NEW_PATH


    #______________________ new code for bacterial_assembly_pipeline _________________#
    python3 -m pip install pandas>=1.5.3 requests>=2.29.0 awscli>=1.27
